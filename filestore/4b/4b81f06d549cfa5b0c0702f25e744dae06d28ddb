import React from 'react'
import {FormId_Contact , CLIENT_ID} from '../../config.js'
import GetContactForm from './GetContactForm'
import { getItemAnonymous,createFormEntryAnonymous, createFormEntry,Empty} from '../../actions/user'
import { connect } from 'react-redux';
import {GET_FORM} from '../../actions/user';
import { UncontrolledAlert } from 'reactstrap';

class Contact extends React.Component {
constructor(props){
  super(props);
  this.state={
    spinner_status:false,
  }
}
componentDidMount(){
    const url ='forms/'+FormId_Contact+'/view/?client='+CLIENT_ID;
    this.setState({spinner_status:true});
    this.props.getItemAnonymous(url, GET_FORM);
  }
componentWillReceiveProps(nextProps) {
    this.setState({spinner_status:nextProps.spinner_status});
 }
    render() {
    return (
	<div>


     <section id="login-register">
            <div className="bloc">
                 <div className="post-header">
                
        </div>
                <div className="col-md-12">
                    <div className="">
                    {this.props.success ?<UncontrolledAlert color="success">{this.props.success}</UncontrolledAlert>
                      :
                      this.props.error ?<UncontrolledAlert color="danger">{this.props.error}</UncontrolledAlert>
                        : null
                    }
                      <GetContactForm fields={this.props.fields} title={''} 
                      formId={FormId_Contact} clientId={CLIENT_ID} spinner_status={this.state.spinner_status} 
                      createFormEntryAnonymous={this.props.createFormEntryAnonymous}
                      textbtn="Envoyer votre message"/>

                    </div>
                       
                </div>
            </div>
        </section>


    </div>


  )
 }
}
function mapStateToProps(state){
  return {
    fields: state.dynamicform.fields,
    title: state.dynamicform.title,
    success: state.dynamicform.success,
    error: state.dynamicform.error,
    spinner_status:state.dynamicform.spinner_status,

  }
}  
export default connect(mapStateToProps, {getItemAnonymous, createFormEntryAnonymous,createFormEntry,Empty})(Contact);

