import React from 'react';
import { connect } from 'react-redux';
import { getItem,SetEmpty} from '../../actions/index';
import { CLIENT_ID,LIST_FIELDS} from '../../config';
import { Field, reduxForm } from 'redux-form';
import { UncontrolledAlert } from 'reactstrap';
import {postItem} from '../../actions/user'


class Search extends React.Component{
    constructor(props){
        super(props);
        this.state={
            search_spinner:false,
            message:null
        }
        this.handeSearch=this.handeSearch.bind(this)
        this.onSearch=this.onSearch.bind(this);
    }

    handeSearch(value){
        const data={fields_to_view:[].toString()}
        if(!value.fields){
            this.props.SetEmpty('EMPTY_PROJECTS_LIST');
            this.props.postItem(`/forms/${this.props.FormId}/entries/list/?client=${CLIENT_ID}`, this.props.action, data)
        }else{
            this.setState({search_spinner:true})
            this.props.SetEmpty('EMPTY_PROJECTS_LIST');
            this.props.postItem(`/forms/${this.props.FormId}/search/entries/list/?keywords=${value.fields.split(' ').join('+')}&client=${CLIENT_ID}`,this.props.action,data)  
        }

    }
    onSearch(e){
        const data={fields_to_view:[].toString()}
        this.props.postItem(`/forms/${this.props.FormId}/search/entries/list/?keywords=${e.target.value.split(' ').join('+')}&client=${CLIENT_ID}`,this.props.action,data)

    }
    render(){
        const {handleSubmit}=this.props;
       return(
           <div className="row">
           <form onSubmit={handleSubmit(this.handeSearch)}>
                {this.state.message?<UncontrolledAlert>{this.state.message}</UncontrolledAlert>:null} 
                <div className="form-group col-md-12"> <Field component="input" name="fields" onChange={(e)=>this.onSearch(e)} ref={fields=>{this.fields=fields}} placeholder="Effectuer votre recherche ici." className="form-control form-control-rounded col-md-12"/></div>
           </form>
           </div>
       )
    }
}

Search = reduxForm({
    form: 'Search',
    enableReinitialize: true
  })(Search);
export default connect(null,{getItem,SetEmpty,postItem})(Search);