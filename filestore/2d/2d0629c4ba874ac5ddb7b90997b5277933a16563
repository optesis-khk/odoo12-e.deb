import React from 'react'
import {CLIENT_ID, FormId_Participation} from '../../config.js'
import GetContactForm from './GetContactForm'
import { getItemAnonymous, getItem,createFormEntryAnonymous,createFormEntry,Empty} from '../../actions/user'
import { connect } from 'react-redux';
import {GET_FORM} from '../../actions/user';
import { UncontrolledAlert } from 'reactstrap';

class Participation extends React.Component {
constructor(props){
  super(props);
  this.state={
    spinner_status:false,
  };
}

componentDidMount(){
    const url ='forms/'+FormId_Participation+'/view/?client='+CLIENT_ID;
    this.setState({spinner_status:true});
    this.props.getItemAnonymous(url, GET_FORM);
  }
componentWillReceiveProps(nextProps) {
    this.setState({spinner_status:false});
 }
    render() {
    return (
	<div>
      <section id="login-register">
            <div className="bloc">
                 <div className="post-header">
        </div>
                <div className=" ">
                    <div className="">
                    {this.props.success?<UncontrolledAlert color="success">{this.props.success}</UncontrolledAlert>
                      :
                      this.props.error?<UncontrolledAlert color="danger">{this.props.error}</UncontrolledAlert>
                        : null
                    }
                   {this.props.get_form_error?<center><h1> Les inscriptions sont closes</h1></center>:
                <GetContactForm fields={this.props.fields} title={''} 
                      formId={FormId_Participation} clientId={CLIENT_ID} spinner_status={this.state.spinner_status} 
                      createFormEntryAnonymous={this.props.createFormEntryAnonymous}
                      textbtn="Valider votre inscription" 
                      terme={{url:"termes-et-conditions",text:"Voir les termes et conditions"}}
                      text={{url:null,text:"voir le texte medical"}}
                      show_points_retrait_contacts={true}
                      nb={{status:true,text:"", data:['PAS DE RETRAIT DE DOSSARD LE JOUR DE LA COURSE','PAS Dâ€™ECHANGE DE DOSSARD NI DE REMBOURSEMENT','PAIEMENT AU RETRAIT DU DOSSARD']}}/>      
                   }  
                    </div>
                </div>
            </div>
        </section>
    </div>
  )
 }
}
function mapStateToProps(state){
  return {
    fields: state.dynamicform.fields,
    status: state.user.status,
    title: state.dynamicform.title,
    success: state.dynamicform.success,
    error: state.dynamicform.error,
    spinner_status:state.dynamicform.spinner_status,
    get_form_error:state.dynamicform.get_form_error

  }
}  
export default connect(mapStateToProps, {getItemAnonymous,getItem,Empty, createFormEntryAnonymous,createFormEntry})(Participation);

